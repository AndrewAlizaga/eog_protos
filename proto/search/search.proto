syntax = "proto3";

package search;
import "proto/shared/shared.proto";
import "proto/case/case.proto";


option go_package = "github.com/AndrewAlizaga/eog_protos/pkg/search;searchv1";


enum SearchStatus {
    UNKNOWN = 0;
    FINISHED = 1;
    COMPLETED = 2;
    FAILURE = 3;
    PENDING = 4;
    EXISTING = 5;
}

// Search model.
message Search {
    // @inject_tag: json:"id" bson:"id"
    string id = 1;
    // @inject_tag: json:"name" bson:"name"
    string subjectName = 2;
    // @inject_tag: json:"cases" bson:"cases"
    repeated string cases = 3;
}

//  SearchRequest model.
message SearchRequest {
    // @inject_tag: json:"case_name" bson:"case_name"
    Case case = 1;
    // @inject_tag: json:"search_owner" bson:"search_owner"
    string searchOwner = 4;
    // @inject_tag: json:"filters" bson:"filters"
    repeated CaseFilters filters = 3;
}

// SearchResponse model.
message SearchResponse {
    // @inject_tag: json:"search_status" bson:"search_status"
    SearchStatus searchStatus = 1;
    // @inject_tag: json:"search" bson:"search"
    Search search = 2; 
}

// SearchService ...
service SearchService {

    // Get search
    rpc GetSearch (shared.SharedID) returns (SearchResponse){};

    // Post search
    rpc PostSearch (SearchRequest) returns (SearchResponse){};
}